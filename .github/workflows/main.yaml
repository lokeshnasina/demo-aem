name: Build
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: 'Repo name'
        required: true
        default: 'demo_project'

jobs:
  createRepoWithNameParam:
    runs-on: ubuntu-latest
    steps:
      - name: create new repo      
        run: |
          echo ${{ secrets.GH_TOKEN }} > secret.file &&
          gh auth login --with-token < secret.file &&
          gh auth status &&
          gh repo create ${{ github.event.inputs.repoName }} --private --template hlxsites/aem-boilerplate-commerce 
      - name: Sleep for 10s to wait for the repo to be created
        run: sleep 10s 
      - name: clone new repo, change gDocPath and push
        run: |
          mkdir -p ~/.ssh  # Create .ssh directory if it doesn't exist
          ssh-keygen -t ed25519 -C "my description" -N "" -f ~/.ssh/github_rsa
          chmod 600 ~/.ssh/github_rsa
          chmod 600 ~/.ssh/github_rsa.pub
          ls -l ~/.ssh  # List contents of the .ssh directory
          echo "Host github.com" > ~/.ssh/config
          echo "  IdentityFile ~/.ssh/github_rsa" >> ~/.ssh/config
          echo ${{ secrets.GH_TOKEN }} > secret.file &&
          gh auth login --with-token < secret.file &&
          gh auth status &&
          gh repo clone lokeshnasina/${{ github.event.inputs.repoName }} &&
          cd ${{ github.event.inputs.repoName }} &&
          # Add deploy key
          gh repo deploy-key add ~/.ssh/github_rsa.pub --title "my" --read-only &&
          # Fetch the deploy key ID
          DEPLOY_KEY_ID=$(gh api --silent repos/lokeshnasina/${{ github.event.inputs.repoName }}/keys | jq -r '.[] | select(.title == "my") | .id') &&
          # Update the deploy key permissions to read/write
          gh api -X PATCH /repos/lokeshnasina/${{ github.event.inputs.repoName }}/keys/$DEPLOY_KEY_ID --field read_only=false &&
          sed -i '2s#.*#  / : [Google Drive Folder](https://drive.google.com/drive/folders/1MGzOt7ubUh3gu7zhZIPb7R7dyRzG371j)#g' fstab.yaml &&
          cat fstab.yaml 
          git config --global user.email "lokesh.nasina@diva-e.com"
          git config --global user.name "lokeshnasina"
          echo "Adding remote repository..."
          git remote set-url origin git@github.com:lokeshnasina/${{ github.event.inputs.repoName }}.git
          echo "Starting SSH agent..."
          eval $(ssh-agent)
          echo "Adding SSH private key to SSH agent..."
          ssh-add ~/.ssh/github_rsa
          git commit -am "use fstab!" 
          git push         